"""
Django settings for lefla project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from decouple import config
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", cast=bool)

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": False,
    "UPDATE_LAST_LOGIN": True,
    "ALGORITHM": "HS256",
    "SIGNING_KEY": SECRET_KEY,
    "VERIFYING_KEY": None,
    "AUDIENCE": None,
    "ISSUER": None,
    "JWK_URL": None,
    "LEEWAY": 0,
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",
    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",
    "JTI_CLAIM": "jti",
    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
    "SLIDING_TOKEN_LIFETIME": timedelta(minutes=5),
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(days=1),
}
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

CHANNEL_LAYER = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "host": [
                (
                    "redis://default:jZ8XGLkrPtcQrCaXiDfu@containers-us-west-106.railway.app",
                    5720,
                )
            ],
        },
    }
}

ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "0.0.0.0",
    "167.99.42.238",
    "lefla.azurewebsites.net",
    "lefla.vercel.app",
]


CORS_ORIGIN_WHITELIST = (
    "https://lefla.azurewebsites.net",
    "http://localhost:8080",
    "http://0.0.0.0:8000",
    "http://localhost:4200",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:4200",
    "http://167.99.42.238",
    "http://localhost:51668",
    "https://lefla.vercel.app",
    "https://lefla.herokuapp.com",
)

CORS_ALLOWED_ORIGINS = [
    "https://lefla.azurewebsites.net",
    "http://localhost:8080",
    "http://localhost:4200",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:3200",
    "http://167.99.42.238",
    "https://lefla.vercel.app",
    "http://localhost:51668",
    "https://lefla-app.herokuapp.com",
]
CSRF_TRUSTED_ORIGINS = [
    "https://lefla.azurewebsites.net",
    "http://localhost:8080",
    "http://localhost:4200",
    "http://127.0.0.1:8000",
    "http://127.0.0.1:3200",
    "http://167.99.42.238",
    "https://lefla.vercel.app",
    "https://lefla-app.herokuapp.com",
    "http://localhost:51668",
]
CORS_ALLOW_ALL_ORIGINS: True
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ),
    "DEFAULT_PERMISION_CLASSES": ("rest_framework.permissions.isAuthenticated",),
    "DEFAULT_PAGINATION_CLASS": "lefla.pagination.LargeResultsSetPagination",
    "PAGE_SIZE": 100,
}

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# Application definition

INSTALLED_APPS = [
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework_simplejwt",
    "debug_toolbar",
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    "ckeditor",
    "django_celery_beat",
    "django_celery_results",
    "accounts",
    "hostels",
    "Transactions",
    "bookings",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

AUTH_USER_MODEL = "accounts.Accounts"

ROOT_URLCONF = "lefla.urls"

# ELASTICSEARCH_DSL = {
#     'default': {
#         'hosts': 'localhost:9200'
#     },
# }

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

ASGI_APPLICATION = "lefla.asgi.application"

# Databases
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if config("ENV") == "local":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
elif config("ENV") == "Docker":

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "postgres",
            "USER": "lefla",
            "PASSWORD": "postgres@lefla19/03647",
            "HOST": "db",
            "PORT": "5432",
        }
    }

else:

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "d4ogomtg27ed0t",
            "USER": "wuodmptuskukti",
            "PASSWORD": "28efcb12822aa972ba64707d5514c159ee366e10bdbcd9ff210c9a1ef4b300e8",
            "HOST": "ec2-44-205-63-142.compute-1.amazonaws.com",
            "PORT": "5432",
        }
    }


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
Twillo_SID = config("Twillo_SID")
Twillo_Token = config("Twillo_Auth_Token")
Twillo_Phonenumber = config("Twillo_Phonenumber")


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_HOST_USER = config("email")
EMAIL_HOST_PASSWORD = "ydscbpygmlgjkrgt"

CELERY_RESULT_BACKEND = "redis://redis:6379/0"
CELERY_CACHE_BACKEND = "redis://redis:6379/0"

# CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"


CELERY_TIMEZONE = "Africa/Nairobi"
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERRIALIZER = "json"


# CELERY_RESULT_BACKEND = (
#     "redis://default:jZ8XGLkrPtcQrCaXiDfu@containers-us-west-106.railway.app:5720"
# )

# This configures Redis as the datastore between Django + Celery
CELERY_BROKER_URL = "redis://redis:6379/0"
# CELERY_BROKER_URL = (
#     "redis://default:jZ8XGLkrPtcQrCaXiDfu@containers-us-west-106.railway.app:5720"
# )


# this allows you to schedule items in the Django admin.
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"
